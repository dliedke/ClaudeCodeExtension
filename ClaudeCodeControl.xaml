<UserControl x:Class="ClaudeCodeVS.ClaudeCodeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:wf="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="400"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}">

	<UserControl.Resources>
		<!-- Adaptive button style for light/dark theme -->
		<Style x:Key="AdaptiveButtonStyle" TargetType="Button">
			<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Padding" Value="8,5"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarHoverOverSelectedKey}}"/>
								<Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarSelectedBorderKey}}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarSelectedKey}}"/>
								<Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarSelectedBorderKey}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.GrayTextKey}}"/>
								<Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Small "chip" for attached images -->
		<Style x:Key="ChipBorder" TargetType="Border">
			<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"/>
			<Setter Property="CornerRadius" Value="12"/>
			<Setter Property="Padding" Value="6,2"/>
			<Setter Property="Margin" Value="0,4,6,0"/>
			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
		</Style>

		<Style x:Key="ChipRemoveButton" TargetType="Button" BasedOn="{StaticResource AdaptiveButtonStyle}">
			<Setter Property="Width" Value="18"/>
			<Setter Property="Height" Value="18"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Margin" Value="6,0,0,0"/>
			<Setter Property="Content" Value="×"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="FontSize" Value="12"/>
		</Style>
	</UserControl.Resources>

	<Grid x:Name="MainGrid">
		<Grid.RowDefinitions>
			<RowDefinition Height="*" MinHeight="80"/>
			<RowDefinition Height="4"/>
			<RowDefinition Height="2*" MinHeight="150"/>
		</Grid.RowDefinitions>

		<!-- Top Section Container -->
		<Grid Grid.Row="0" Margin="6,6,6,0">
			<Grid.RowDefinitions>
				<RowDefinition Height="*" MinHeight="80"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<!-- Prompt Input Area -->
			<GroupBox Grid.Row="0"
                      Header="Prompt / Paste Image"
                      Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
                      Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"
                      BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"
                      BorderThickness="1"
                      Margin="0,0,0,2">
				<TextBox x:Name="PromptTextBox"
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         VerticalScrollBarVisibility="Auto"
                         FontFamily="Cascadia Mono"
                         Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
                         Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                         BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"
                         Margin="3"
                         KeyDown="PromptTextBox_KeyDown"
                         PreviewKeyDown="PromptTextBox_PreviewKeyDown"/>
			</GroupBox>

			<!-- Controls row: [Send + Add Image] | [Chips] | [Restart (right-aligned)] -->
			<Grid Grid.Row="1" Margin="0,4,0,0" VerticalAlignment="Top">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<!-- Left cluster -->
				<StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Top">
					<!-- Send button (visible only when Send-with-Enter is off) -->
					<Button x:Name="SendPromptButton"
                            Content="Send"
							Width="50"
                            MinWidth="50"
                            Style="{StaticResource AdaptiveButtonStyle}"
                            Click="SendButton_Click"
                            Visibility="Collapsed"
                            Margin="0,0,8,0"/>

					<!-- Fixed-width Add Image so it never expands with chips -->
					<Button x:Name="AddImageButton"
                            Content="Add Image"
                            Style="{StaticResource AdaptiveButtonStyle}"
                            Width="90"
                            MinWidth="90"
                            HorizontalAlignment="Left"
                            PreviewMouseLeftButtonUp="ImageDropBorder_Click"/>
				</StackPanel>

				<!-- Chips in their own stretch area so they don't affect button sizing -->
				<ScrollViewer Grid.Column="1"
                              VerticalScrollBarVisibility="Disabled"
                              HorizontalScrollBarVisibility="Auto">
					<WrapPanel x:Name="AttachedImagesPanel" Margin="8,0,8,0" />
				</ScrollViewer>

				<!-- Restart aligned right -->
				<Button Grid.Column="2"
                        x:Name="RestartTerminalButton"
                        Content="Restart"
						Width="60"
                        MinWidth="60"
                        Style="{StaticResource AdaptiveButtonStyle}"
                        Click="RestartTerminalButton_Click"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Right"/>
			</Grid>

			<!-- Send with Enter toggle -->
			<CheckBox Grid.Row="2"
                      x:Name="SendWithEnterCheckBox"
                      Content="Send with Enter"
                      IsChecked="True"
                      Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
                      Margin="0,6,0,6"
                      Checked="SendWithEnterCheckBox_Checked"
                      Unchecked="SendWithEnterCheckBox_Unchecked"/>
		</Grid>

		<!-- Resizable Splitter -->
		<GridSplitter x:Name="MainGridSplitter"
                      Grid.Row="1"
                      Height="4"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"
                      ShowsPreview="True"
                      ResizeDirection="Rows"
                      ResizeBehavior="PreviousAndNext"
                      Cursor="SizeNS"
                      DragCompleted="MainGridSplitter_DragCompleted"/>

		<!-- Embedded Terminal -->
		<GroupBox Grid.Row="2"
                  Header="Claude Code"
                  Margin="6"
                  Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
                  Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"
                  BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"
                  BorderThickness="1">
			<wf:WindowsFormsHost x:Name="TerminalHost" Margin="3"/>
		</GroupBox>
	</Grid>
</UserControl>
